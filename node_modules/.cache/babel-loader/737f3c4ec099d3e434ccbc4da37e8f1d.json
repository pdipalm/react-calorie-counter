{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdipalma\\\\calorie_counter\\\\src\\\\components\\\\Interface.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Stack';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport React, { useState } from 'react';\nimport { styled, createMuiTheme } from '@mui/material/styles';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Grid from '@mui/material/Grid';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Interface() {\n  _s();\n\n  const [mealItems, updateMealItems] = useState(JSON.parse(localStorage.getItem('meal-list')) || []); //stores all meals as object array\n\n  const [calSum, setCalSum] = useState(JSON.parse(localStorage.getItem('cal-sum')) || 0); //stores calorie sum as number\n\n  React.useEffect(() => {\n    //saves user data to localStorage on every rerender\n    localStorage.setItem('meal-list', JSON.stringify(mealItems));\n    localStorage.setItem('cal-sum', calSum);\n  }, [mealItems, calSum]);\n  const tfTheme = createMuiTheme({\n    overrides: {\n      MuiInput: {\n        underline: {\n          '&:after': {\n            borderBottom: '2px solid #ace4fc'\n          },\n          \"&:after\": {\n            borderBottom: '2px solid #ace4fc'\n          }\n        }\n      }\n    }\n  });\n  const AddButton = styled(Button)(() => ({\n    //styled addButton, used in buttonhandler\n    color: 'white',\n    left: 20,\n    width: 130,\n    backgroundColor: '#1565C0',\n    '&:hover': {\n      backgroundColor: '#1254a1'\n    }\n  }));\n  const UpdateButton = styled(Button)(() => ({\n    //styled updateButton, used in buttonhandler\n    backgroundColor: 'orange',\n    float: 'right',\n    '&:hover': {\n      backgroundColor: '#cc8500'\n    }\n  }));\n  const DeleteButton = styled(Button)(() => ({\n    //styled deleteButton, used in buttonhandler\n    backgroundColor: 'red',\n    float: 'right',\n    '&:hover': {\n      backgroundColor: '#cc0000'\n    }\n  }));\n\n  function handleAddMeal(name, cal_count) {\n    //handles addMeal functionality, called onClick of add meal\n    // console.log(\"addmeal handler called\");   \n    if (name == null || cal_count == null) {\n      //checking for user errors\n      console.log(\"null\");\n      return;\n    }\n\n    let newItems = mealItems; //new ref to mealItems\n\n    newItems.push({\n      //push new meal to array\n      foodName: name,\n      calories: cal_count\n    });\n    setCalSum(parseInt(calSum) + parseInt(newItems[newItems.length - 1].calories)); // add new calories to old sum and update state\n\n    mealInput.current.value = \"\"; //reset textfields\n\n    calInput.current.value = \"\";\n    setCalText(null); //reset onChange handler states\n\n    setMealText(null); // console.log(mealItems);      \n  }\n\n  const MealItem = _ref => {\n    let {\n      id,\n      foodName,\n      calories\n    } = _ref;\n    //MealItem DOM object as li, edit iconbutton found here as well\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [foodName, \":\", '\\u00A0']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [calories, \" Calories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            left: '98%',\n            position: 'absolute'\n          },\n          onClick: () => {\n            handleEdit(id, calories, foodName);\n          },\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 132\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  };\n\n  const MealList = () => {\n    //meal list DOM object, holds list of MealItems\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: mealItems.map((item, i) => /*#__PURE__*/_jsxDEV(MealItem, {\n        id: i,\n        foodName: item.foodName,\n        calories: item.calories\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [isEditing, setIsEditing] = useState(false); //is the user editing?\n\n  const [editingId, setEditingId] = useState(-1); //what index of MealItems is the user editing?\n\n  const [editingCalCount, setEditingCalCount] = useState(-1); //calorie count of the mealItem being edited?\n\n  const [editingName, setEditingName] = useState(null); //food name of mealItem being edited?\n\n  function handleEdit(id, calories, foodName) {\n    //handle first part of editing of MealItems, called by edit IconButton\n    // console.log('editing',{id});\n    setEditingId(id); //set states\n\n    setEditingCalCount(calories);\n    setEditingName(foodName);\n\n    if (isEditing) {\n      //triggers when user clicks iconbutton again to return to AddMeal state without making edits to MealItems\n      setIsEditing(false);\n      return;\n    }\n\n    setIsEditing(true);\n  }\n\n  const ButtonHandler = () => {\n    //toggles between addmeal buttons and edit/delete buttons onClick of iconButton                           \n    if (isEditing) {\n      //returns update and delete buttons if user is trying to edit\n      return /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"flex-start\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UpdateButton, {\n          variant: \"contained\",\n          onClick: () => {\n            updateMeal();\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(ConstructionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }, this),\n          children: \"UPDATE MEAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          variant: \"contained\",\n          onClick: () => {\n            deleteMeal();\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 36\n          }, this),\n          children: \"DELETE MEAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this);\n    } //else we return the addMeal button to the DOM\n\n\n    return /*#__PURE__*/_jsxDEV(AddButton, {\n      startIcon: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 35\n      }, this),\n      onClick: () => {\n        handleAddMeal(mealText, calText);\n      },\n      children: \"ADD MEAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [isUpdating, setUpdating] = useState(false); //update button has modified functionality depending on first press or second press, false-first, true-second\n\n  function updateMeal() {\n    //called when orange updateButton is pressed\n    // console.log('update clicked');\n    if (!isUpdating) {\n      //triggered during first press\n      // console.log('1st press');\n      mealInput.current.value = editingName;\n      calInput.current.value = editingCalCount;\n      setUpdating(true);\n      return;\n    } // console.log('2nd press');\n\n\n    if (mealInput.current.value === '' || calInput.current.value === '') {\n      //user made an error or maybe they don't like me :( (just kidding it's me. I'm the user)\n      setUpdating(false); //reset our states\n\n      setIsEditing(false);\n      mealInput.current.value = \"\"; //reset our textfields (they should already be like this but...)\n\n      calInput.current.value = \"\";\n      return; //do nothing and return \n    }\n\n    let newItems = mealItems;\n    var oldCals = editingCalCount; // console.log('look at dis - ', calInput.current.value)\n\n    newItems.splice(editingId, 1, {\n      id: editingId,\n      foodName: mealInput.current.value,\n      calories: calInput.current.value\n    }); //splice edited item with \"new\" item, retain same ID, values pulled from TextField refs\n\n    localStorage.setItem('meal-list', JSON.stringify(newItems)); //push modifications to localStorage\n    //console.log(oldCals);\n\n    setCalSum(parseInt(calSum) + (parseInt(calInput.current.value) - parseInt(oldCals))); //arithmetic to adjust calorie count\n\n    setUpdating(false); //reset our states\n\n    setIsEditing(false);\n    mealInput.current.value = \"\"; //reset our textfields\n\n    calInput.current.value = \"\";\n  }\n\n  function deleteMeal() {\n    //called onclick of delete button\n    // console.log('delete ', editingId);\n    if (editingId === -1) {\n      //this should never happen but I have no faith when it comes to software\n      console.log('delete failed');\n      return;\n    }\n\n    updateMealItems(mealItems.filter((o, i) => editingId !== i)); //I was informed this is a better solution than splicing, because splice does a deep copy behind the scenes?\n\n    setCalSum(calSum - editingCalCount); //subtract from old calories\n\n    setIsEditing(false);\n    setEditingId(-1);\n  }\n  /*states for changing labels above textfields*/\n\n\n  const [mfocused, setmFocused] = useState(false);\n  const [cfocused, setcFocused] = useState(false);\n  const [mealText, setMealText] = useState(); //states for onChange of textfields\n\n  const [calText, setCalText] = useState();\n  const mealInput = React.useRef(null); //refs to textfields\n\n  const calInput = React.useRef(null);\n  return (\n    /*#__PURE__*/\n    //main DOM return\n    _jsxDEV(Box, {\n      className: \"interfaceContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        className: \"outerStack\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            justifyContent: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              style: {\n                fontSize: \"24px\",\n                paddingLeft: \"22px\",\n                margin: \"0px\",\n                textAlign: \"left\"\n              },\n              children: \"Add Meal / Food Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  children: /*#__PURE__*/_jsxDEV(Container, {\n                    style: {\n                      fontSize: \"14px\",\n                      color: mfocused ? '#ace4fc' : ''\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: \"meal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"interfaceTF\",\n                      placeholder: \"Add item\",\n                      variant: \"standard\",\n                      fullWidth: true,\n                      sx: {\n                        width: '100%'\n                      },\n                      color: \"error\",\n                      onFocus: () => setmFocused(true),\n                      onBlur: () => setmFocused(false),\n                      onChange: mealText => setMealText(mealText.target.value),\n                      inputRef: mealInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  children: /*#__PURE__*/_jsxDEV(Container, {\n                    style: {\n                      fontSize: \"14px\",\n                      color: cfocused ? '#ace4fc' : ''\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: \"calories\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"interfaceTF\",\n                      placeholder: \"Add calories\",\n                      variant: \"standard\",\n                      fullWidth: true,\n                      sx: {\n                        width: '100%',\n                        color: \"red\"\n                      },\n                      type: \"number\",\n                      onFocus: () => setcFocused(true),\n                      onBlur: () => setcFocused(false),\n                      onChange: calText => setCalText(calText.target.value),\n                      inputRef: calInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this), \"`\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ButtonHandler, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"2.92rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total Calories: \", calSum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MealList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Interface, \"KwSZO4ZKu/IDBJs4WIM0J94Fjfo=\");\n\n_c = Interface;\nexport default Interface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interface\");","map":{"version":3,"names":["Button","Paper","Container","Stack","TextField","Box","AddBoxIcon","React","useState","styled","createMuiTheme","List","ListItem","Divider","IconButton","EditIcon","Grid","CloseIcon","ConstructionIcon","Interface","mealItems","updateMealItems","JSON","parse","localStorage","getItem","calSum","setCalSum","useEffect","setItem","stringify","tfTheme","overrides","MuiInput","underline","borderBottom","AddButton","color","left","width","backgroundColor","UpdateButton","float","DeleteButton","handleAddMeal","name","cal_count","console","log","newItems","push","foodName","calories","parseInt","length","mealInput","current","value","calInput","setCalText","setMealText","MealItem","id","position","handleEdit","MealList","map","item","i","isEditing","setIsEditing","editingId","setEditingId","editingCalCount","setEditingCalCount","editingName","setEditingName","ButtonHandler","updateMeal","deleteMeal","mealText","calText","isUpdating","setUpdating","oldCals","splice","filter","o","mfocused","setmFocused","cfocused","setcFocused","useRef","fontSize","paddingLeft","margin","textAlign","target"],"sources":["C:/Users/pdipalma/calorie_counter/src/components/Interface.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Stack';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport React, { useState } from 'react';\r\nimport { styled, createMuiTheme } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Grid from '@mui/material/Grid';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ConstructionIcon from '@mui/icons-material/Construction';\r\n\r\nexport function Interface() {\r\n\r\n    const [mealItems, updateMealItems] = useState(JSON.parse(localStorage.getItem('meal-list')) || []);                     //stores all meals as object array\r\n    const [calSum, setCalSum] = useState(JSON.parse(localStorage.getItem('cal-sum')) || 0);                                 //stores calorie sum as number\r\n\r\n    React.useEffect(() => {                                                                                                 //saves user data to localStorage on every rerender\r\n        localStorage.setItem('meal-list', JSON.stringify(mealItems));\r\n        localStorage.setItem('cal-sum', calSum)\r\n    }, [mealItems, calSum]);\r\n\r\n    const tfTheme = createMuiTheme({\r\n        overrides:{\r\n            MuiInput: {\r\n                underline: {\r\n                     '&:after': {\r\n                        borderBottom: '2px solid #ace4fc',\r\n                      },\r\n                      \"&:after\": {\r\n                        borderBottom: '2px solid #ace4fc',\r\n                      }\r\n                  },\r\n            },\r\n        }\r\n    });\r\n    \r\n    const AddButton = styled(Button) (() => ({                                                                              //styled addButton, used in buttonhandler\r\n        color: 'white',\r\n        left: 20,\r\n        width: 130,\r\n        backgroundColor: '#1565C0',\r\n        '&:hover': {\r\n            backgroundColor: '#1254a1',\r\n        },\r\n    }));\r\n\r\n    const UpdateButton = styled(Button) (() => ({                                                                           //styled updateButton, used in buttonhandler\r\n        backgroundColor: 'orange',\r\n        float: 'right',\r\n        '&:hover': {\r\n            backgroundColor: '#cc8500',\r\n        },\r\n    }));\r\n\r\n    const DeleteButton = styled(Button) (() => ({                                                                          //styled deleteButton, used in buttonhandler\r\n        backgroundColor: 'red',\r\n        float: 'right',\r\n        '&:hover': {\r\n            backgroundColor: '#cc0000',\r\n        },\r\n    }));\r\n    \r\n    function handleAddMeal(name, cal_count) {                                                                              //handles addMeal functionality, called onClick of add meal\r\n        // console.log(\"addmeal handler called\");   \r\n\r\n        if(name == null || cal_count == null){  //checking for user errors\r\n            console.log(\"null\");\r\n            return;\r\n        }\r\n    \r\n        let newItems = mealItems;               //new ref to mealItems\r\n    \r\n        newItems.push({                         //push new meal to array\r\n            foodName: name,\r\n            calories: cal_count\r\n        });\r\n\r\n        setCalSum(parseInt(calSum) + parseInt(newItems[newItems.length-1].calories));  // add new calories to old sum and update state\r\n\r\n        mealInput.current.value = \"\";          //reset textfields\r\n        calInput.current.value = \"\";\r\n\r\n        setCalText(null);                      //reset onChange handler states\r\n        setMealText(null);\r\n\r\n        // console.log(mealItems);      \r\n\r\n        \r\n    }\r\n    \r\n    const MealItem = ({id, foodName, calories}) => {                                    //MealItem DOM object as li, edit iconbutton found here as well\r\n        return(\r\n            <Box>\r\n                <Divider />\r\n                <ListItem key={id}>\r\n                    <strong>{foodName}:{'\\u00A0'}</strong>\r\n                    <em>{calories} Calories</em>\r\n                    <IconButton style={{left: '98%', position: 'absolute'}} onClick={() => { handleEdit(id, calories, foodName) }}><EditIcon /></IconButton>\r\n                </ListItem>\r\n                <Divider />\r\n            </Box>\r\n        )\r\n    }\r\n    \r\n    const MealList = () => {                                                           //meal list DOM object, holds list of MealItems\r\n        return(\r\n            <List>\r\n                {mealItems.map((item, i) => (\r\n                    <MealItem\r\n                        key= {i}\r\n                        id = {i}\r\n                        foodName= {item.foodName}\r\n                        calories= {item.calories}\r\n                    ></MealItem>\r\n                ))}\r\n            </List>\r\n        )\r\n    }\r\n\r\n    const [isEditing, setIsEditing] = useState(false);              //is the user editing?\r\n    const [editingId, setEditingId] = useState(-1);                 //what index of MealItems is the user editing?\r\n    const [editingCalCount, setEditingCalCount] = useState(-1);     //calorie count of the mealItem being edited?\r\n    const [editingName, setEditingName] = useState(null);           //food name of mealItem being edited?\r\n\r\n    function handleEdit(id, calories, foodName){                    //handle first part of editing of MealItems, called by edit IconButton\r\n        // console.log('editing',{id});\r\n        setEditingId(id);                   //set states\r\n        setEditingCalCount(calories);       \r\n        setEditingName(foodName);\r\n        if(isEditing){                      //triggers when user clicks iconbutton again to return to AddMeal state without making edits to MealItems\r\n            setIsEditing(false);\r\n            return;\r\n        }\r\n        setIsEditing(true);\r\n    }\r\n    \r\n    const ButtonHandler = () => {                                   //toggles between addmeal buttons and edit/delete buttons onClick of iconButton                           \r\n        if(isEditing){          //returns update and delete buttons if user is trying to edit\r\n            return(\r\n                <Stack direction='row' alignItems='flex-start' spacing={2}>\r\n                    <div />\r\n                    <UpdateButton\r\n                        variant=\"contained\"\r\n                        onClick = {() => {updateMeal()}}\r\n                        startIcon={<ConstructionIcon />}\r\n                    >UPDATE MEAL</UpdateButton>\r\n                    <DeleteButton\r\n                        variant=\"contained\"\r\n                        onClick = {() =>  {deleteMeal()}}\r\n                        startIcon={<CloseIcon />}\r\n                    >DELETE MEAL</DeleteButton>\r\n                </Stack>\r\n            )\r\n        }\r\n        //else we return the addMeal button to the DOM\r\n        return(\r\n            <AddButton startIcon={<AddBoxIcon />} onClick={() => {\r\n                handleAddMeal(mealText, calText);\r\n            }}>\r\n                ADD MEAL\r\n            </AddButton>\r\n        )\r\n        \r\n    }\r\n    \r\n    const [isUpdating, setUpdating] = useState(false);      //update button has modified functionality depending on first press or second press, false-first, true-second\r\n    function updateMeal(){                                  //called when orange updateButton is pressed\r\n        // console.log('update clicked');\r\n        if(!isUpdating){                                    //triggered during first press\r\n            // console.log('1st press');\r\n            mealInput.current.value = editingName;\r\n            calInput.current.value = editingCalCount;\r\n            setUpdating(true);\r\n            return;\r\n        }\r\n\r\n        // console.log('2nd press');\r\n        if(mealInput.current.value === '' || calInput.current.value === ''){      //user made an error or maybe they don't like me :( (just kidding it's me. I'm the user)\r\n            setUpdating(false);     //reset our states\r\n            setIsEditing(false);\r\n        \r\n            mealInput.current.value = \"\";   //reset our textfields (they should already be like this but...)\r\n            calInput.current.value = \"\";\r\n\r\n            return;     //do nothing and return \r\n        }\r\n\r\n        let newItems = mealItems;\r\n        var oldCals = editingCalCount;\r\n\r\n        // console.log('look at dis - ', calInput.current.value)\r\n        \r\n        newItems.splice(editingId, 1, {id: editingId, foodName: mealInput.current.value, calories: calInput.current.value});  //splice edited item with \"new\" item, retain same ID, values pulled from TextField refs\r\n        localStorage.setItem('meal-list', JSON.stringify(newItems));    //push modifications to localStorage\r\n\r\n        //console.log(oldCals);\r\n        setCalSum(parseInt(calSum)+(parseInt(calInput.current.value)-parseInt(oldCals)));       //arithmetic to adjust calorie count\r\n\r\n        setUpdating(false);     //reset our states\r\n        setIsEditing(false);\r\n        \r\n        mealInput.current.value = \"\";   //reset our textfields\r\n        calInput.current.value = \"\";\r\n    }\r\n    \r\n    function deleteMeal(){          //called onclick of delete button\r\n        // console.log('delete ', editingId);\r\n        if(editingId === -1){           //this should never happen but I have no faith when it comes to software\r\n            console.log('delete failed');\r\n            return;\r\n        }\r\n             \r\n        updateMealItems(mealItems.filter((o, i) => editingId !== i));       //I was informed this is a better solution than splicing, because splice does a deep copy behind the scenes?\r\n        \r\n        setCalSum(calSum-editingCalCount);      //subtract from old calories\r\n        setIsEditing(false);\r\n        setEditingId(-1);\r\n    }\r\n\r\n    /*states for changing labels above textfields*/\r\n    const [mfocused, setmFocused] = useState(false);\r\n    const [cfocused, setcFocused] = useState(false);\r\n\r\n    const [mealText, setMealText] = useState();     //states for onChange of textfields\r\n    const [calText, setCalText] = useState();\r\n\r\n    const mealInput = React.useRef(null);       //refs to textfields\r\n    const calInput = React.useRef(null);\r\n\r\n    return (            //main DOM return\r\n        <Box className=\"interfaceContainer\">\r\n            <Stack className=\"outerStack\">\r\n                <Paper>\r\n                    <br />\r\n                    <Stack justifyContent=\"left\">\r\n                        <Container style={{fontSize: \"24px\", paddingLeft: \"22px\", margin:\"0px\", textAlign: \"left\"}}>Add Meal / Food Item</Container>\r\n                        <br />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={6}>\r\n                                <Stack>\r\n                                    <Container style={{ fontSize: \"14px\", color: mfocused ? '#ace4fc' : ''}}>\r\n                                        <Box>meal</Box>\r\n                                        <TextField id=\"interfaceTF\" placeholder=\"Add item\" variant=\"standard\" fullWidth sx={{ width: '100%' }} color=\"error\"\r\n                                            onFocus={() => setmFocused(true)}\r\n                                            onBlur={() => setmFocused(false)}\r\n                                            onChange={(mealText) => setMealText(mealText.target.value)}\r\n                                            inputRef={mealInput}\r\n                                        />\r\n                                    </Container>\r\n                                </Stack>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Stack>\r\n                                    <Container style={{ fontSize: \"14px\", color: cfocused ? '#ace4fc' : '' }}>\r\n                                        <Box>calories</Box>\r\n                                        <TextField id=\"interfaceTF\" placeholder=\"Add calories\" variant=\"standard\" fullWidth sx={{ width: '100%', color: \"red\" }} type=\"number\"\r\n                                            onFocus={() => setcFocused(true)}\r\n                                            onBlur={() => setcFocused(false)}\r\n                                            onChange={(calText) => setCalText(calText.target.value)}\r\n                                            inputRef={calInput}\r\n                                        />\r\n                                    </Container>\r\n                                </Stack>`\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <ButtonHandler />\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                </Paper>\r\n            </Stack>\r\n            <br />\r\n            <br />\r\n            <Container style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"2.92rem\"\r\n            }}>\r\n                <h3>Total Calories: {calSum}</h3>\r\n            </Container>\r\n            <MealList />\r\n        </Box>    \r\n    )\r\n}\r\n\r\nexport default Interface"],"mappings":"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"},"metadata":{},"sourceType":"module"}