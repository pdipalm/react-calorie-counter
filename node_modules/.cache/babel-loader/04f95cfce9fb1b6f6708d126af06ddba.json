{"ast":null,"code":"import _slicedToArray from\"C:/Users/pdipalma/calorie_counter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Button from'@mui/material/Button';import Paper from'@mui/material/Paper';import Container from'@mui/material/Container';import Stack from'@mui/material/Stack';import TextField from'@mui/material/TextField';import Box from'@mui/material/Stack';import AddBoxIcon from'@mui/icons-material/AddBox';import React,{useState}from'react';import{styled}from'@mui/material/styles';import List from'@mui/material/List';import ListItem from'@mui/material/ListItem';import Divider from'@mui/material/Divider';import IconButton from'@mui/material/IconButton';import EditIcon from'@mui/icons-material/Edit';import Grid from'@mui/material/Grid';import CloseIcon from'@mui/icons-material/Close';import ConstructionIcon from'@mui/icons-material/Construction';import{createTheme,ThemeProvider}from'@mui/material/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Interface(){var _useState=useState(JSON.parse(localStorage.getItem('meal-list'))||[]),_useState2=_slicedToArray(_useState,2),mealItems=_useState2[0],updateMealItems=_useState2[1];//stores all meals as object array\nvar _useState3=useState(JSON.parse(localStorage.getItem('cal-sum'))||0),_useState4=_slicedToArray(_useState3,2),calSum=_useState4[0],setCalSum=_useState4[1];//stores calorie sum as number\nReact.useEffect(function(){//saves user data to localStorage on every rerender\nlocalStorage.setItem('meal-list',JSON.stringify(mealItems));localStorage.setItem('cal-sum',calSum);},[mealItems,calSum]);var AddButton=styled(Button)(function(){return{//styled addButton, used in buttonhandler\ncolor:'white',left:20,width:130,backgroundColor:'#1565C0','&:hover':{backgroundColor:'#1254a1'}};});var UpdateButton=styled(Button)(function(){return{//styled updateButton, used in buttonhandler\nbackgroundColor:'orange',float:'right','&:hover':{backgroundColor:'#cc8500'}};});var DeleteButton=styled(Button)(function(){return{//styled deleteButton, used in buttonhandler\nbackgroundColor:'red',float:'right','&:hover':{backgroundColor:'#cc0000'}};});function handleAddMeal(name,cal_count){//handles addMeal functionality, called onClick of add meal\n// console.log(\"addmeal handler called\");   \nif(name==null||cal_count==null){//checking for user errors\nconsole.log(\"null\");return;}var newItems=mealItems;//new ref to mealItems\nnewItems.push({//push new meal to array\nfoodName:name,calories:cal_count});setCalSum(parseInt(calSum)+parseInt(newItems[newItems.length-1].calories));// add new calories to old sum and update state\nmealInput.current.value=\"\";//reset textfields\ncalInput.current.value=\"\";setCalText(null);//reset onChange handler states\nsetMealText(null);// console.log(mealItems);      \n}var MealItem=function MealItem(_ref){var id=_ref.id,foodName=_ref.foodName,calories=_ref.calories;//MealItem DOM object as li, edit iconbutton found here as well\nreturn/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[foodName,\":\",\"\\xA0\"]}),/*#__PURE__*/_jsxs(\"em\",{children:[calories,\" Calories\"]}),/*#__PURE__*/_jsx(IconButton,{style:{left:'98%',position:'absolute'},onClick:function onClick(){handleEdit(id,calories,foodName);},children:/*#__PURE__*/_jsx(EditIcon,{})})]},id),/*#__PURE__*/_jsx(Divider,{})]});};var MealList=function MealList(){//meal list DOM object, holds list of MealItems\nreturn/*#__PURE__*/_jsx(List,{children:mealItems.map(function(item,i){return/*#__PURE__*/_jsx(MealItem,{id:i,foodName:item.foodName,calories:item.calories},i);})});};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEditing=_useState6[0],setIsEditing=_useState6[1];//is the user editing?\nvar _useState7=useState(-1),_useState8=_slicedToArray(_useState7,2),editingId=_useState8[0],setEditingId=_useState8[1];//what index of MealItems is the user editing?\nvar _useState9=useState(-1),_useState10=_slicedToArray(_useState9,2),editingCalCount=_useState10[0],setEditingCalCount=_useState10[1];//calorie count of the mealItem being edited?\nvar _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),editingName=_useState12[0],setEditingName=_useState12[1];//food name of mealItem being edited?\nfunction handleEdit(id,calories,foodName){//handle first part of editing of MealItems, called by edit IconButton\n// console.log('editing',{id});\nsetEditingId(id);//set states\nsetEditingCalCount(calories);setEditingName(foodName);if(isEditing){//triggers when user clicks iconbutton again to return to AddMeal state without making edits to MealItems\nsetIsEditing(false);return;}setIsEditing(true);}var ButtonHandler=function ButtonHandler(){//toggles between addmeal buttons and edit/delete buttons onClick of iconButton                           \nif(isEditing){//returns update and delete buttons if user is trying to edit\nreturn/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"flex-start\",spacing:2,children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(UpdateButton,{variant:\"contained\",onClick:function onClick(){updateMeal();},startIcon:/*#__PURE__*/_jsx(ConstructionIcon,{}),children:\"UPDATE MEAL\"}),/*#__PURE__*/_jsx(DeleteButton,{variant:\"contained\",onClick:function onClick(){deleteMeal();},startIcon:/*#__PURE__*/_jsx(CloseIcon,{}),children:\"DELETE MEAL\"})]});}//else we return the addMeal button to the DOM\nreturn/*#__PURE__*/_jsx(AddButton,{startIcon:/*#__PURE__*/_jsx(AddBoxIcon,{}),onClick:function onClick(){handleAddMeal(mealText,calText);},children:\"ADD MEAL\"});};var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isUpdating=_useState14[0],setUpdating=_useState14[1];//update button has modified functionality depending on first press or second press, false-first, true-second\nfunction updateMeal(){//called when orange updateButton is pressed\n// console.log('update clicked');\nif(!isUpdating){//triggered during first press\n// console.log('1st press');\nmealInput.current.value=editingName;calInput.current.value=editingCalCount;setUpdating(true);return;}// console.log('2nd press');\nif(mealInput.current.value===''||calInput.current.value===''){//user made an error or maybe they don't like me :( (just kidding it's me. I'm the user)\nsetUpdating(false);//reset our states\nsetIsEditing(false);mealInput.current.value=\"\";//reset our textfields (they should already be like this but...)\ncalInput.current.value=\"\";return;//do nothing and return \n}var newItems=mealItems;var oldCals=editingCalCount;// console.log('look at dis - ', calInput.current.value)\nnewItems.splice(editingId,1,{id:editingId,foodName:mealInput.current.value,calories:calInput.current.value});//splice edited item with \"new\" item, retain same ID, values pulled from TextField refs\nlocalStorage.setItem('meal-list',JSON.stringify(newItems));//push modifications to localStorage\n//console.log(oldCals);\nsetCalSum(parseInt(calSum)+(parseInt(calInput.current.value)-parseInt(oldCals)));//arithmetic to adjust calorie count\nsetUpdating(false);//reset our states\nsetIsEditing(false);mealInput.current.value=\"\";//reset our textfields\ncalInput.current.value=\"\";}function deleteMeal(){//called onclick of delete button\n// console.log('delete ', editingId);\nif(editingId===-1){//this should never happen but I have no faith when it comes to software\nconsole.log('delete failed');return;}updateMealItems(mealItems.filter(function(o,i){return editingId!==i;}));//I was informed this is a better solution than splicing, because splice does a deep copy behind the scenes?\nsetCalSum(calSum-editingCalCount);//subtract from old calories\nsetIsEditing(false);setEditingId(-1);}/*states for changing labels above textfields*/var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),mfocused=_useState16[0],setmFocused=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),cfocused=_useState18[0],setcFocused=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),mealText=_useState20[0],setMealText=_useState20[1];//states for onChange of textfields\nvar _useState21=useState(),_useState22=_slicedToArray(_useState21,2),calText=_useState22[0],setCalText=_useState22[1];var mealInput=React.useRef(null);//refs to textfields\nvar calInput=React.useRef(null);/*const CustomTF = styled(TextField)({\r\n        \r\n    })*/var TFtheme=createTheme({palette:{primary:{main:'#499c8c'}}});return/*#__PURE__*/ (//main DOM return\n_jsxs(Box,{className:\"interfaceContainer\",children:[/*#__PURE__*/_jsx(Stack,{className:\"outerStack\",children:/*#__PURE__*/_jsxs(Paper,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Stack,{justifyContent:\"left\",children:[/*#__PURE__*/_jsx(Container,{style:{fontSize:\"24px\",paddingLeft:\"22px\",margin:\"0px\",textAlign:\"left\"},children:\"Add Meal / Food Item\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(ThemeProvider,{theme:TFtheme,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Stack,{children:/*#__PURE__*/_jsxs(Container,{style:{fontSize:\"14px\",color:mfocused?'#499c8c':''},children:[/*#__PURE__*/_jsx(Box,{children:\"meal\"}),/*#__PURE__*/_jsx(TextField,{id:\"interfaceTF\",placeholder:\"Add item\",variant:\"standard\",fullWidth:true,sx:{width:'100%'},onFocus:function onFocus(){return setmFocused(true);},onBlur:function onBlur(){return setmFocused(false);},onChange:function onChange(mealText){return setMealText(mealText.target.value);},inputRef:mealInput})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Stack,{children:/*#__PURE__*/_jsxs(Container,{style:{fontSize:\"14px\",color:cfocused?'#499c8c':''},children:[/*#__PURE__*/_jsx(Box,{children:\"calories\"}),/*#__PURE__*/_jsx(TextField,{id:\"interfaceTF\",placeholder:\"Add calories\",variant:\"standard\",fullWidth:true,sx:{width:'100%'},type:\"number\",onFocus:function onFocus(){return setcFocused(true);},onBlur:function onBlur(){return setcFocused(false);},onChange:function onChange(calText){return setCalText(calText.target.value);},inputRef:calInput})]})})})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(ButtonHandler,{})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Container,{style:{textAlign:\"center\",fontSize:\"2.92rem\"},children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Total Calories: \",calSum]})}),/*#__PURE__*/_jsx(MealList,{})]}));}export default Interface;","map":{"version":3,"names":["Button","Paper","Container","Stack","TextField","Box","AddBoxIcon","React","useState","styled","List","ListItem","Divider","IconButton","EditIcon","Grid","CloseIcon","ConstructionIcon","createTheme","ThemeProvider","Interface","JSON","parse","localStorage","getItem","mealItems","updateMealItems","calSum","setCalSum","useEffect","setItem","stringify","AddButton","color","left","width","backgroundColor","UpdateButton","float","DeleteButton","handleAddMeal","name","cal_count","console","log","newItems","push","foodName","calories","parseInt","length","mealInput","current","value","calInput","setCalText","setMealText","MealItem","id","position","handleEdit","MealList","map","item","i","isEditing","setIsEditing","editingId","setEditingId","editingCalCount","setEditingCalCount","editingName","setEditingName","ButtonHandler","updateMeal","deleteMeal","mealText","calText","isUpdating","setUpdating","oldCals","splice","filter","o","mfocused","setmFocused","cfocused","setcFocused","useRef","TFtheme","palette","primary","main","fontSize","paddingLeft","margin","textAlign","target"],"sources":["C:/Users/pdipalma/calorie_counter/src/components/Interface.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Stack';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport React, { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Grid from '@mui/material/Grid';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ConstructionIcon from '@mui/icons-material/Construction';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nexport function Interface() {\r\n\r\n    const [mealItems, updateMealItems] = useState(JSON.parse(localStorage.getItem('meal-list')) || []);                     //stores all meals as object array\r\n    const [calSum, setCalSum] = useState(JSON.parse(localStorage.getItem('cal-sum')) || 0);                                 //stores calorie sum as number\r\n\r\n\r\n    React.useEffect(() => {                                                                                                 //saves user data to localStorage on every rerender\r\n        localStorage.setItem('meal-list', JSON.stringify(mealItems));\r\n        localStorage.setItem('cal-sum', calSum)\r\n    }, [mealItems, calSum]);\r\n    \r\n    const AddButton = styled(Button) (() => ({                                                                              //styled addButton, used in buttonhandler\r\n        color: 'white',\r\n        left: 20,\r\n        width: 130,\r\n        backgroundColor: '#1565C0',\r\n        '&:hover': {\r\n            backgroundColor: '#1254a1',\r\n        },\r\n    }));\r\n\r\n    const UpdateButton = styled(Button) (() => ({                                                                           //styled updateButton, used in buttonhandler\r\n        backgroundColor: 'orange',\r\n        float: 'right',\r\n        '&:hover': {\r\n            backgroundColor: '#cc8500',\r\n        },\r\n    }));\r\n\r\n    const DeleteButton = styled(Button) (() => ({                                                                          //styled deleteButton, used in buttonhandler\r\n        backgroundColor: 'red',\r\n        float: 'right',\r\n        '&:hover': {\r\n            backgroundColor: '#cc0000',\r\n        },\r\n    }));\r\n    \r\n    function handleAddMeal(name, cal_count) {                                                                              //handles addMeal functionality, called onClick of add meal\r\n        // console.log(\"addmeal handler called\");   \r\n\r\n        if(name == null || cal_count == null){  //checking for user errors\r\n            console.log(\"null\");\r\n            return;\r\n        }\r\n    \r\n        let newItems = mealItems;               //new ref to mealItems\r\n    \r\n        newItems.push({                         //push new meal to array\r\n            foodName: name,\r\n            calories: cal_count\r\n        });\r\n\r\n        setCalSum(parseInt(calSum) + parseInt(newItems[newItems.length-1].calories));  // add new calories to old sum and update state\r\n\r\n        mealInput.current.value = \"\";          //reset textfields\r\n        calInput.current.value = \"\";\r\n\r\n        setCalText(null);                      //reset onChange handler states\r\n        setMealText(null);\r\n\r\n        // console.log(mealItems);      \r\n\r\n        \r\n    }\r\n    \r\n    const MealItem = ({id, foodName, calories}) => {                                    //MealItem DOM object as li, edit iconbutton found here as well\r\n        return(\r\n            <Box>\r\n                <Divider />\r\n                <ListItem key={id}>\r\n                    <strong>{foodName}:{'\\u00A0'}</strong>\r\n                    <em>{calories} Calories</em>\r\n                    <IconButton style={{left: '98%', position: 'absolute'}} onClick={() => { handleEdit(id, calories, foodName) }}><EditIcon /></IconButton>\r\n                </ListItem>\r\n                <Divider />\r\n            </Box>\r\n        )\r\n    }\r\n    \r\n    const MealList = () => {                                                           //meal list DOM object, holds list of MealItems\r\n        return(\r\n            <List>\r\n                {mealItems.map((item, i) => (\r\n                    <MealItem\r\n                        key= {i}\r\n                        id = {i}\r\n                        foodName= {item.foodName}\r\n                        calories= {item.calories}\r\n                    ></MealItem>\r\n                ))}\r\n            </List>\r\n        )\r\n    }\r\n\r\n    const [isEditing, setIsEditing] = useState(false);              //is the user editing?\r\n    const [editingId, setEditingId] = useState(-1);                 //what index of MealItems is the user editing?\r\n    const [editingCalCount, setEditingCalCount] = useState(-1);     //calorie count of the mealItem being edited?\r\n    const [editingName, setEditingName] = useState(null);           //food name of mealItem being edited?\r\n\r\n    function handleEdit(id, calories, foodName){                    //handle first part of editing of MealItems, called by edit IconButton\r\n        // console.log('editing',{id});\r\n        setEditingId(id);                   //set states\r\n        setEditingCalCount(calories);       \r\n        setEditingName(foodName);\r\n        if(isEditing){                      //triggers when user clicks iconbutton again to return to AddMeal state without making edits to MealItems\r\n            setIsEditing(false);\r\n            return;\r\n        }\r\n        setIsEditing(true);\r\n    }\r\n    \r\n    const ButtonHandler = () => {                                   //toggles between addmeal buttons and edit/delete buttons onClick of iconButton                           \r\n        if(isEditing){          //returns update and delete buttons if user is trying to edit\r\n            return(\r\n                <Stack direction='row' alignItems='flex-start' spacing={2}>\r\n                    <div />\r\n                    <UpdateButton\r\n                        variant=\"contained\"\r\n                        onClick = {() => {updateMeal()}}\r\n                        startIcon={<ConstructionIcon />}\r\n                    >UPDATE MEAL</UpdateButton>\r\n                    <DeleteButton\r\n                        variant=\"contained\"\r\n                        onClick = {() =>  {deleteMeal()}}\r\n                        startIcon={<CloseIcon />}\r\n                    >DELETE MEAL</DeleteButton>\r\n                </Stack>\r\n            )\r\n        }\r\n        //else we return the addMeal button to the DOM\r\n        return(\r\n            <AddButton startIcon={<AddBoxIcon />} onClick={() => {\r\n                handleAddMeal(mealText, calText);\r\n            }}>\r\n                ADD MEAL\r\n            </AddButton>\r\n        )\r\n        \r\n    }\r\n    \r\n    const [isUpdating, setUpdating] = useState(false);      //update button has modified functionality depending on first press or second press, false-first, true-second\r\n    function updateMeal(){                                  //called when orange updateButton is pressed\r\n        // console.log('update clicked');\r\n        if(!isUpdating){                                    //triggered during first press\r\n            // console.log('1st press');\r\n            mealInput.current.value = editingName;\r\n            calInput.current.value = editingCalCount;\r\n            setUpdating(true);\r\n            return;\r\n        }\r\n\r\n        // console.log('2nd press');\r\n        if(mealInput.current.value === '' || calInput.current.value === ''){      //user made an error or maybe they don't like me :( (just kidding it's me. I'm the user)\r\n            setUpdating(false);     //reset our states\r\n            setIsEditing(false);\r\n        \r\n            mealInput.current.value = \"\";   //reset our textfields (they should already be like this but...)\r\n            calInput.current.value = \"\";\r\n\r\n            return;     //do nothing and return \r\n        }\r\n\r\n        let newItems = mealItems;\r\n        var oldCals = editingCalCount;\r\n\r\n        // console.log('look at dis - ', calInput.current.value)\r\n        \r\n        newItems.splice(editingId, 1, {id: editingId, foodName: mealInput.current.value, calories: calInput.current.value});  //splice edited item with \"new\" item, retain same ID, values pulled from TextField refs\r\n        localStorage.setItem('meal-list', JSON.stringify(newItems));    //push modifications to localStorage\r\n\r\n        //console.log(oldCals);\r\n        setCalSum(parseInt(calSum)+(parseInt(calInput.current.value)-parseInt(oldCals)));       //arithmetic to adjust calorie count\r\n\r\n        setUpdating(false);     //reset our states\r\n        setIsEditing(false);\r\n        \r\n        mealInput.current.value = \"\";   //reset our textfields\r\n        calInput.current.value = \"\";\r\n    }\r\n    \r\n    function deleteMeal(){          //called onclick of delete button\r\n        // console.log('delete ', editingId);\r\n        if(editingId === -1){           //this should never happen but I have no faith when it comes to software\r\n            console.log('delete failed');\r\n            return;\r\n        }\r\n             \r\n        updateMealItems(mealItems.filter((o, i) => editingId !== i));       //I was informed this is a better solution than splicing, because splice does a deep copy behind the scenes?\r\n        \r\n        setCalSum(calSum-editingCalCount);      //subtract from old calories\r\n        setIsEditing(false);\r\n        setEditingId(-1);\r\n    }\r\n\r\n    /*states for changing labels above textfields*/\r\n    const [mfocused, setmFocused] = useState(false);\r\n    const [cfocused, setcFocused] = useState(false);\r\n\r\n    const [mealText, setMealText] = useState();     //states for onChange of textfields\r\n    const [calText, setCalText] = useState();\r\n\r\n    const mealInput = React.useRef(null);       //refs to textfields\r\n    const calInput = React.useRef(null);\r\n\r\n    /*const CustomTF = styled(TextField)({\r\n        \r\n    })*/\r\n\r\n    const TFtheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#499c8c'\r\n            },\r\n        }\r\n    });\r\n\r\n    return (            //main DOM return\r\n        <Box className=\"interfaceContainer\">\r\n            <Stack className=\"outerStack\">\r\n                <Paper>\r\n                    <br />\r\n                    <Stack justifyContent=\"left\">\r\n                        <Container style={{fontSize: \"24px\", paddingLeft: \"22px\", margin:\"0px\", textAlign: \"left\"}}>Add Meal / Food Item</Container>\r\n                        <br />\r\n                        <ThemeProvider theme={TFtheme}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6}>\r\n                                    <Stack>\r\n                                        <Container style={{ fontSize: \"14px\", color: mfocused ? '#499c8c' : ''}}>\r\n                                            <Box>meal</Box>\r\n                                            <TextField id=\"interfaceTF\" placeholder=\"Add item\" variant=\"standard\" fullWidth sx={{ width: '100%' }}\r\n                                                onFocus={() => setmFocused(true)}\r\n                                                onBlur={() => setmFocused(false)}\r\n                                                onChange={(mealText) => setMealText(mealText.target.value)}\r\n                                                inputRef={mealInput}\r\n                                            />\r\n                                        </Container>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Stack>\r\n                                        <Container style={{ fontSize: \"14px\", color: cfocused ? '#499c8c' : '' }}>\r\n                                            <Box>calories</Box>\r\n                                            <TextField id=\"interfaceTF\" placeholder=\"Add calories\" variant=\"standard\" fullWidth sx={{ width: '100%' }} type=\"number\"\r\n                                                onFocus={() => setcFocused(true)}\r\n                                                onBlur={() => setcFocused(false)}\r\n                                                onChange={(calText) => setCalText(calText.target.value)}\r\n                                                inputRef={calInput}\r\n                                            />\r\n                                        </Container>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ThemeProvider>\r\n                        <br />\r\n                        <ButtonHandler />\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                </Paper>\r\n            </Stack>\r\n            <br />\r\n            <br />\r\n            <Container style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"2.92rem\"\r\n            }}>\r\n                <h3>Total Calories: {calSum}</h3>\r\n            </Container>\r\n            <MealList />\r\n        </Box>    \r\n    )\r\n}\r\n\r\nexport default Interface"],"mappings":"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"},"metadata":{},"sourceType":"module"}