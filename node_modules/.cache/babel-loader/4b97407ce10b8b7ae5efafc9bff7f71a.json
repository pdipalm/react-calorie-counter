{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdipalma\\\\Desktop\\\\cc_react_fix\\\\react-calorie-counter-main\\\\src\\\\components\\\\Interface.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Stack';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Grid from '@mui/material/Grid';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Interface() {\n  _s();\n\n  const [mealItems, updateMealItems] = useState(JSON.parse(localStorage.getItem('meal-list')) || []); //stores all meals as object array\n\n  const [calSum, setCalSum] = useState(JSON.parse(localStorage.getItem('cal-sum')) || 0); //stores calorie sum as number\n\n  React.useEffect(() => {\n    //saves user data to localStorage on every rerender\n    localStorage.setItem('meal-list', JSON.stringify(mealItems));\n    localStorage.setItem('cal-sum', calSum);\n  }, [mealItems, calSum]);\n  const AddButton = styled(Button)(() => ({\n    //styled addButton, used in buttonhandler\n    color: 'white',\n    left: 20,\n    width: 130,\n    backgroundColor: '#1565C0',\n    '&:hover': {\n      backgroundColor: '#1254a1'\n    }\n  }));\n  const UpdateButton = styled(Button)(() => ({\n    //styled updateButton, used in buttonhandler\n    backgroundColor: 'orange',\n    float: 'right',\n    '&:hover': {\n      backgroundColor: '#cc8500'\n    }\n  }));\n  const DeleteButton = styled(Button)(() => ({\n    //styled deleteButton, used in buttonhandler\n    backgroundColor: 'red',\n    float: 'right',\n    '&:hover': {\n      backgroundColor: '#cc0000'\n    }\n  }));\n\n  function handleAddMeal(name, cal_count) {\n    //handles addMeal functionality, called onClick of add meal\n    // console.log(\"addmeal handler called\");   \n    if (name == null || cal_count == null) {\n      //checking for user errors\n      console.log(\"null\");\n      return;\n    }\n\n    let newItems = mealItems; //new ref to mealItems\n\n    newItems.push({\n      //push new meal to array\n      foodName: name,\n      calories: cal_count\n    });\n    setCalSum(parseInt(calSum) + parseInt(newItems[newItems.length - 1].calories)); // add new calories to old sum and update state\n\n    mealInput.current.value = \"\"; //reset textfields\n\n    calInput.current.value = \"\";\n    setCalText(null); //reset onChange handler states\n\n    setMealText(null); // console.log(mealItems);      \n  }\n\n  const MealItem = _ref => {\n    let {\n      id,\n      foodName,\n      calories\n    } = _ref;\n    //MealItem DOM object as li, edit iconbutton found here as well\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [foodName, \":\", '\\u00A0']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [calories, \" Calories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            left: '98%',\n            position: 'absolute'\n          },\n          onClick: () => {\n            handleEdit(id, calories, foodName);\n          },\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 132\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  };\n\n  const MealList = () => {\n    //meal list DOM object, holds list of MealItems\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: mealItems.map((item, i) => /*#__PURE__*/_jsxDEV(MealItem, {\n        id: i,\n        foodName: item.foodName,\n        calories: item.calories\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [isEditing, setIsEditing] = useState(false); //is the user editing?\n\n  const [editingId, setEditingId] = useState(-1); //what index of MealItems is the user editing?\n\n  const [editingCalCount, setEditingCalCount] = useState(-1); //calorie count of the mealItem being edited?\n  //const [editingName, setEditingName] = useState(null);           //food name of mealItem being edited?\n\n  function handleEdit(id, calories, foodName) {\n    //handle first part of editing of MealItems, called by edit IconButton\n    // console.log('editing',{id});\n    setEditingId(id); //set states\n\n    setEditingCalCount(calories); //setEditingName(foodName);\n\n    if (isEditing) {\n      //triggers when user clicks iconbutton again to return to AddMeal state without making edits to MealItems\n      setIsEditing(false);\n      return;\n    }\n\n    setIsEditing(true);\n    mealInput.current.value = editing;\n    calInput.current.value = calories;\n  }\n\n  const ButtonHandler = () => {\n    //toggles between addmeal buttons and edit/delete buttons onClick of iconButton                           \n    if (isEditing) {\n      //returns update and delete buttons if user is trying to edit\n      return /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"flex-start\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UpdateButton, {\n          variant: \"contained\",\n          onClick: () => {\n            updateMeal();\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(ConstructionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 36\n          }, this),\n          children: \"UPDATE MEAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          variant: \"contained\",\n          onClick: () => {\n            deleteMeal();\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 36\n          }, this),\n          children: \"DELETE MEAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this);\n    } //else we return the addMeal button to the DOM\n\n\n    return /*#__PURE__*/_jsxDEV(AddButton, {\n      startIcon: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 35\n      }, this),\n      onClick: () => {\n        handleAddMeal(mealText, calText);\n      },\n      children: \"ADD MEAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }; //const [isUpdating, setUpdating] = useState(false);      //update button has modified functionality depending on first press or second press, false-first, true-second\n\n\n  function updateMeal() {\n    //called when orange updateButton is pressed\n    // console.log('update clicked');\n    // console.log('2nd press');\n    if (mealInput.current.value === '' || calInput.current.value === '') {\n      //user made an error or maybe they don't like me :( (just kidding it's me. I'm the user)\n      setIsEditing(false);\n      mealInput.current.value = \"\"; //reset our textfields (they should already be like this but...)\n\n      calInput.current.value = \"\";\n      return; //do nothing and return \n    }\n\n    let newItems = mealItems;\n    var oldCals = editingCalCount; // console.log('look at dis - ', calInput.current.value)\n\n    newItems.splice(editingId, 1, {\n      id: editingId,\n      foodName: mealInput.current.value,\n      calories: calInput.current.value\n    }); //splice edited item with \"new\" item, retain same ID, values pulled from TextField refs\n\n    localStorage.setItem('meal-list', JSON.stringify(newItems)); //push modifications to localStorage\n    //console.log(oldCals);\n\n    setCalSum(parseInt(calSum) + (parseInt(calInput.current.value) - parseInt(oldCals))); //arithmetic to adjust calorie count     \n    //reset our states\n\n    setIsEditing(false);\n    mealInput.current.value = \"\"; //reset our textfields\n\n    calInput.current.value = \"\";\n  }\n\n  function deleteMeal() {\n    //called onclick of delete button\n    // console.log('delete ', editingId);\n    if (editingId === -1) {\n      //this should never happen but I have no faith when it comes to software\n      console.log('delete failed');\n      return;\n    }\n\n    updateMealItems(mealItems.filter((o, i) => editingId !== i)); //I was informed this is a better solution than splicing, because splice does a deep copy behind the scenes?\n\n    setCalSum(parseInt(calSum) - parseInt(editingCalCount)); //subtract from old calories\n\n    setIsEditing(false);\n    setEditingId(-1);\n  }\n  /*states for changing labels above textfields*/\n\n  /*const [mfocused, setmFocused] = useState(false);\n  const [cfocused, setcFocused] = useState(false);*/\n\n\n  const [mealText, setMealText] = useState(); //states for onChange of textfields\n\n  const [calText, setCalText] = useState();\n  const mealInput = React.useRef(null); //refs to textfields\n\n  const calInput = React.useRef(null);\n  /*const CustomTF = styled(TextField)({\n      \n  })*/\n\n  const TFtheme = createTheme({\n    palette: {\n      primary: {\n        main: '#499c8c'\n      }\n    }\n  });\n  return (\n    /*#__PURE__*/\n    //main DOM return\n    _jsxDEV(Box, {\n      className: \"interfaceContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        className: \"outerStack\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            justifyContent: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              style: {\n                fontSize: \"24px\",\n                paddingLeft: \"22px\",\n                margin: \"0px\",\n                textAlign: \"left\"\n              },\n              children: \"Add Meal / Food Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: TFtheme,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    children: /*#__PURE__*/_jsxDEV(Container, {\n                      style: {\n                        fontSize: \"14px\"\n                        /*color: mfocused ? '#499c8c' : ''*/\n\n                      },\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"interfaceTF\",\n                        placeholder: \"Add item\",\n                        variant: \"standard\",\n                        fullWidth: true,\n                        sx: {\n                          width: '100%'\n                        },\n                        label: \"meal\",\n                        onChange: mealText => setMealText(mealText.target.value),\n                        inputRef: mealInput,\n                        InputLabelProps: {\n                          shrink: true\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    children: /*#__PURE__*/_jsxDEV(Container, {\n                      style: {\n                        fontSize: \"14px\"\n                        /*color: cfocused ? '#499c8c' : ''*/\n\n                      },\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"interfaceTF\",\n                        placeholder: \"Add calories\",\n                        variant: \"standard\",\n                        fullWidth: true,\n                        sx: {\n                          width: '100%'\n                        },\n                        type: \"number\",\n                        label: \"calories\",\n                        onChange: calText => setCalText(calText.target.value),\n                        inputRef: calInput,\n                        InputLabelProps: {\n                          shrink: true\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ButtonHandler, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"2.92rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total Calories: \", calSum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MealList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Interface, \"dOLFhA/8cmuKcq/GEjpwnPlGbCU=\");\n\n_c = Interface;\nexport default Interface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interface\");","map":{"version":3,"names":["Button","Paper","Container","Stack","TextField","Box","AddBoxIcon","React","useState","styled","List","ListItem","Divider","IconButton","EditIcon","Grid","CloseIcon","ConstructionIcon","createTheme","ThemeProvider","Interface","mealItems","updateMealItems","JSON","parse","localStorage","getItem","calSum","setCalSum","useEffect","setItem","stringify","AddButton","color","left","width","backgroundColor","UpdateButton","float","DeleteButton","handleAddMeal","name","cal_count","console","log","newItems","push","foodName","calories","parseInt","length","mealInput","current","value","calInput","setCalText","setMealText","MealItem","id","position","handleEdit","MealList","map","item","i","isEditing","setIsEditing","editingId","setEditingId","editingCalCount","setEditingCalCount","editing","ButtonHandler","updateMeal","deleteMeal","mealText","calText","oldCals","splice","filter","o","useRef","TFtheme","palette","primary","main","fontSize","paddingLeft","margin","textAlign","target","shrink"],"sources":["C:/Users/pdipalma/Desktop/cc_react_fix/react-calorie-counter-main/src/components/Interface.js"],"sourcesContent":["import Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Stack';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Grid from '@mui/material/Grid';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nexport function Interface() {\n\n    const [mealItems, updateMealItems] = useState(JSON.parse(localStorage.getItem('meal-list')) || []);                     //stores all meals as object array\n    const [calSum, setCalSum] = useState(JSON.parse(localStorage.getItem('cal-sum')) || 0);                                 //stores calorie sum as number\n\n\n    React.useEffect(() => {                                                                                                 //saves user data to localStorage on every rerender\n        localStorage.setItem('meal-list', JSON.stringify(mealItems));\n        localStorage.setItem('cal-sum', calSum)\n    }, [mealItems, calSum]);\n    \n    const AddButton = styled(Button) (() => ({                                                                              //styled addButton, used in buttonhandler\n        color: 'white',\n        left: 20,\n        width: 130,\n        backgroundColor: '#1565C0',\n        '&:hover': {\n            backgroundColor: '#1254a1',\n        },\n    }));\n\n    const UpdateButton = styled(Button) (() => ({                                                                           //styled updateButton, used in buttonhandler\n        backgroundColor: 'orange',\n        float: 'right',\n        '&:hover': {\n            backgroundColor: '#cc8500',\n        },\n    }));\n\n    const DeleteButton = styled(Button) (() => ({                                                                          //styled deleteButton, used in buttonhandler\n        backgroundColor: 'red',\n        float: 'right',\n        '&:hover': {\n            backgroundColor: '#cc0000',\n        },\n    }));\n    \n    function handleAddMeal(name, cal_count) {                                                                              //handles addMeal functionality, called onClick of add meal\n        // console.log(\"addmeal handler called\");   \n\n        if(name == null || cal_count == null){  //checking for user errors\n            console.log(\"null\");\n            return;\n        }\n    \n        let newItems = mealItems;               //new ref to mealItems\n    \n        newItems.push({                         //push new meal to array\n            foodName: name,\n            calories: cal_count\n        });\n\n        setCalSum(parseInt(calSum) + parseInt(newItems[newItems.length-1].calories));  // add new calories to old sum and update state\n\n        mealInput.current.value = \"\";          //reset textfields\n        calInput.current.value = \"\";\n\n        setCalText(null);                      //reset onChange handler states\n        setMealText(null);\n\n        // console.log(mealItems);      \n\n        \n    }\n    \n    const MealItem = ({id, foodName, calories}) => {                                    //MealItem DOM object as li, edit iconbutton found here as well\n        return(\n            <Box>\n                <Divider />\n                <ListItem key={id}>\n                    <strong>{foodName}:{'\\u00A0'}</strong>\n                    <em>{calories} Calories</em>\n                    <IconButton style={{left: '98%', position: 'absolute'}} onClick={() => { handleEdit(id, calories, foodName) }}><EditIcon /></IconButton>\n                </ListItem>\n                <Divider />\n            </Box>\n        )\n    }\n    \n    const MealList = () => {                                                           //meal list DOM object, holds list of MealItems\n        return(\n            <List>\n                {mealItems.map((item, i) => (\n                    <MealItem\n                        key= {i}\n                        id = {i}\n                        foodName= {item.foodName}\n                        calories= {item.calories}\n                    ></MealItem>\n                ))}\n            </List>\n        )\n    }\n\n    const [isEditing, setIsEditing] = useState(false);              //is the user editing?\n    const [editingId, setEditingId] = useState(-1);                 //what index of MealItems is the user editing?\n    const [editingCalCount, setEditingCalCount] = useState(-1);     //calorie count of the mealItem being edited?\n    //const [editingName, setEditingName] = useState(null);           //food name of mealItem being edited?\n\n    function handleEdit(id, calories, foodName){                    //handle first part of editing of MealItems, called by edit IconButton\n        // console.log('editing',{id});\n        setEditingId(id);                   //set states\n        setEditingCalCount(calories);       \n        //setEditingName(foodName);\n        if(isEditing){                      //triggers when user clicks iconbutton again to return to AddMeal state without making edits to MealItems\n            setIsEditing(false);\n            return;\n        }\n        setIsEditing(true);\n        mealInput.current.value = editing;\n        calInput.current.value = calories;\n    }\n    \n    const ButtonHandler = () => {                                   //toggles between addmeal buttons and edit/delete buttons onClick of iconButton                           \n        if(isEditing){          //returns update and delete buttons if user is trying to edit\n            return(\n                <Stack direction='row' alignItems='flex-start' spacing={2}>\n                    <div />\n                    <UpdateButton\n                        variant=\"contained\"\n                        onClick = {() => {updateMeal()}}\n                        startIcon={<ConstructionIcon />}\n                    >UPDATE MEAL</UpdateButton>\n                    <DeleteButton\n                        variant=\"contained\"\n                        onClick = {() =>  {deleteMeal()}}\n                        startIcon={<CloseIcon />}\n                    >DELETE MEAL</DeleteButton>\n                </Stack>\n            )\n        }\n        //else we return the addMeal button to the DOM\n        return(\n            <AddButton startIcon={<AddBoxIcon />} onClick={() => {\n                handleAddMeal(mealText, calText);\n            }}>\n                ADD MEAL\n            </AddButton>\n        )\n        \n    }\n    \n    //const [isUpdating, setUpdating] = useState(false);      //update button has modified functionality depending on first press or second press, false-first, true-second\n    function updateMeal(){                                  //called when orange updateButton is pressed\n        // console.log('update clicked');\n\n        // console.log('2nd press');\n        if(mealInput.current.value === '' || calInput.current.value === ''){      //user made an error or maybe they don't like me :( (just kidding it's me. I'm the user)\n            setIsEditing(false);\n        \n            mealInput.current.value = \"\";   //reset our textfields (they should already be like this but...)\n            calInput.current.value = \"\";\n\n            return;     //do nothing and return \n        }\n\n        let newItems = mealItems;\n        var oldCals = editingCalCount;\n\n        // console.log('look at dis - ', calInput.current.value)\n        \n        newItems.splice(editingId, 1, {id: editingId, foodName: mealInput.current.value, calories: calInput.current.value});  //splice edited item with \"new\" item, retain same ID, values pulled from TextField refs\n        localStorage.setItem('meal-list', JSON.stringify(newItems));    //push modifications to localStorage\n\n        //console.log(oldCals);\n        setCalSum(parseInt(calSum)+(parseInt(calInput.current.value)-parseInt(oldCals)));       //arithmetic to adjust calorie count     \n        //reset our states\n        setIsEditing(false);\n        \n        mealInput.current.value = \"\";   //reset our textfields\n        calInput.current.value = \"\";\n    }\n    \n    function deleteMeal(){          //called onclick of delete button\n        // console.log('delete ', editingId);\n        if(editingId === -1){           //this should never happen but I have no faith when it comes to software\n            console.log('delete failed');\n            return;\n        }\n             \n        updateMealItems(mealItems.filter((o, i) => editingId !== i));       //I was informed this is a better solution than splicing, because splice does a deep copy behind the scenes?\n        \n        setCalSum(parseInt(calSum)-parseInt(editingCalCount));      //subtract from old calories\n        setIsEditing(false);\n        setEditingId(-1);\n    }\n\n    /*states for changing labels above textfields*/\n    /*const [mfocused, setmFocused] = useState(false);\n    const [cfocused, setcFocused] = useState(false);*/\n\n    const [mealText, setMealText] = useState();     //states for onChange of textfields\n    const [calText, setCalText] = useState();\n\n    const mealInput = React.useRef(null);       //refs to textfields\n    const calInput = React.useRef(null);\n\n    /*const CustomTF = styled(TextField)({\n        \n    })*/\n\n    const TFtheme = createTheme({\n        palette: {\n            primary: {\n                main: '#499c8c'\n            },\n        }\n    });\n\n    return (            //main DOM return\n        <Box className=\"interfaceContainer\">\n            <Stack className=\"outerStack\">\n                <Paper>\n                    <br />\n                    <Stack justifyContent=\"left\">\n                        <Container style={{fontSize: \"24px\", paddingLeft: \"22px\", margin:\"0px\", textAlign: \"left\"}}>Add Meal / Food Item</Container>\n                        <br />\n                        <ThemeProvider theme={TFtheme}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                    <Stack>\n                                        <Container style={{ fontSize: \"14px\", /*color: mfocused ? '#499c8c' : ''*/}}>\n                                            <TextField id=\"interfaceTF\" placeholder=\"Add item\" variant=\"standard\" fullWidth sx={{ width: '100%' }} label='meal'                                               \n                                                onChange={(mealText) => setMealText(mealText.target.value)}\n                                                inputRef={mealInput}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </Container>\n                                    </Stack>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Stack>\n                                        <Container style={{ fontSize: \"14px\", /*color: cfocused ? '#499c8c' : ''*/ }}>\n                                            <TextField id=\"interfaceTF\" placeholder=\"Add calories\" variant=\"standard\" fullWidth sx={{ width: '100%' }} type=\"number\" label='calories'\n                                                onChange={(calText) => setCalText(calText.target.value)}\n                                                inputRef={calInput}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </Container>\n                                    </Stack>\n                                </Grid>\n                            </Grid>\n                        </ThemeProvider>\n                        <br />\n                        <ButtonHandler />\n                    </Stack>\n                    <br />\n                    <br />\n                </Paper>\n            </Stack>\n            <br />\n            <br />\n            <Container style={{\n                textAlign: \"center\",\n                fontSize: \"2.92rem\"\n            }}>\n                <h3>Total Calories: {calSum}</h3>\n            </Container>\n            <MealList />\n        </Box>    \n    )\n}\n\nexport default Interface"],"mappings":"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"},"metadata":{},"sourceType":"module"}